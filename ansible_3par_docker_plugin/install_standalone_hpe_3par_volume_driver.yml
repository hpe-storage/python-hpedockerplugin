- hosts: localhost
  become: root
  environment:
    http_proxy: "{{ http_proxy  | default('')}}"
    https_proxy: "{{ https_proxy  | default('')}}"
  tasks:
    - name: install sshpass
      package:
        name: sshpass
        state: present

- hosts: all

  environment:
    http_proxy: "{{ http_proxy  | default('')}}"
    https_proxy: "{{ https_proxy  | default('')}}"

  tasks:
  
  - name: load plugin settings
    include_vars: 'properties/plugin_configuration_properties.yml'

  - name: Install prerequistes
    include: tasks/install_prerequisites_on_all.yml

  - name: Install prerequistes
    include: tasks/install_prerequisites.yml

  - name: Install packages on Ubuntu
    package:
      name: "{{ item }}"
      state: present
    with_items:
      - open-iscsi
      - multipath-tools
    when: ansible_distribution == 'Ubuntu'
    become: yes

  - name: Install packages on CentOS/RedHat
    package:
      name: "{{ item }}"
      state: present
    with_items:
      - iscsi-initiator-utils
      - device-mapper-multipath
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'
    become: yes

  - name: Copy multipath configuration file
    copy:
      src: multipath.conf
      dest: /etc/multipath.conf
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'
    become: yes

  - name: Rebuild the initrd, otherwise the system may not boot anymore
    shell: dracut --force --add multipath
    become: yes
    when: ansible_distribution == 'SLES'

  - name: Create multipath file for SLES
    shell: multipath -t > /etc/multipath.conf
    become: yes
    when: ansible_distribution == 'SLES'

  - name: Change MountFlags
    ini_file:
      dest: /usr/lib/systemd/system/docker.service
      section: Service
      option: MountFlags
      value: shared
      no_extra_spaces: true
      backup: yes
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'
    become: yes

  - name: Reload sytemd daemon
    systemd:
      daemon_reload: yes
    become: yes

  - name: Restart Services
    systemd:
      name: "{{ item }}"
      state: restarted
    with_items:
      - open-iscsi
      - multipath-tools
      - docker
    when: ansible_distribution == 'Ubuntu'
    become: yes

  - name: Restart Services
    systemd:
      name: docker.service
      state: restarted
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'
    become: yes

  - name: Enable the services
    systemd:
      name: "{{  item  }}"
      state: started
      enabled: True
    with_items:
      - iscsid
      - multipathd
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat' or ansible_distribution == 'SLES'

    become: yes

  - name: load etcd settings
    include_vars: 'properties/etcd_cluster_properties.yml'

  - name: run etcd container
    docker_container:
      name: etcd
      image: "{{ etcd_image }}"
      state: started
      detach: true
      ports:
        - "{{ etcd_peer_port }}:{{ etcd_peer_port }}"
        - "{{ etcd_client_port_1 }}:{{ etcd_client_port_1 }}"
        - "{{ etcd_client_port_2 }}:{{ etcd_client_port_2 }}"
      env:
        ETCD_NAME: etcd0
        ETCD_ADVERTISE_CLIENT_URLS: "{{ etcd_advertise_client_url_1 }},{{ etcd_advertise_client_url_2 }}"
        ETCD_LISTEN_CLIENT_URLS: "{{ etcd_listen_client_url_1 }},{{ etcd_listen_client_url_2 }}"
        ETCD_INITIAL_ADVERTISE_PEER_URLS: "{{ etcd_initial_advertise_peer_urls }}"
        ETCD_LISTEN_PEER_URLS: "{{ etcd_listen_peer_urls }}"
        ETCD_INITIAL_CLUSTER: "etcd0=http://{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:{{ etcd_peer_port }}"
        ETCD_INITIAL_CLUSTER_TOKEN: "{{ etcd_initial_cluster_token }}"
        ETCD_INITIAL_CLUSTER_STATE: "{{ etcd_initial_cluster_state }}"
      restart_policy: always
    become: yes
    
  - name: Create conf file
    include: tasks/create_conf_file.yml

  - name: create hpedockerplugin container
    docker_container:
      name: plugin_container
      image: "{{ INVENTORY['DEFAULT']['volume_plugin'] }}"
      privileged: true
      network_mode: host
      state: started
      detach: true
      volumes:
        - /dev:/dev
        - /run/lock:/run/lock
        - /var/lib:/var/lib
        - /var/run/docker/plugins:/var/run/docker/plugins:rw
        - /etc:/etc
        - /root/.ssh:/root/.ssh
        - /sys:/sys
        - /root/plugin/certs:/root/plugin/certs
        - /sbin/iscsiadm:/sbin/ia
        - /lib/modules:/lib/modules
        - /lib64:/lib64
        - /var/run/docker.sock:/var/run/docker.sock
        - /opt/hpe/data:/opt/hpe/data:rshared
      restart_policy: on-failure
    become: yes

